import org.apache.tools.ant.filters.*

ext {
    bintrayPackage = 'serenity-core'
    seleniumVersion = '2.44.0'
}

jar {
    manifest {
        attributes("Implementation-Title": "Serenity Core",
                "Implementation-Version": project.version.toString())
    }
}

dependencies {

    compile project(':serenity-report-resources')

    compile "com.fasterxml.jackson.core:jackson-core:2.4.3"
    compile "com.fasterxml.jackson.core:jackson-annotations:2.4.3"
    compile "com.fasterxml.jackson.core:jackson-databind:2.4.3"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:2.4.3"
    compile ("com.fasterxml.jackson.datatype:jackson-datatype-guava:2.4.3") {
        exclude group: 'com.google.guava', module: 'guava'
    }

    compile ("cglib:cglib:2.2.2") {
        exclude group: 'asm', module: 'asm'
    }

    compile "commons-codec:commons-codec:1.9"
    compile "commons-io:commons-io:2.4"

    compile ("com.opera:operadriver:1.5") {
        exclude group: 'org.seleniumhq.selenium', module:'selenium-java'
        exclude group: 'org.seleniumhq.selenium', module:'selenium-remote-driver' +
                ''
        exclude group: 'com.google.guava', module: 'guava'
    }

    compile ("org.seleniumhq.selenium:selenium-server:$seleniumVersion") {
        exclude group: 'cglib', module: 'cglib-nodep'
        exclude group: 'guava', module: 'guava'
        exclude group: 'commons-io', module: 'commons-io'
        exclude group: 'commons-codec', module: 'commons-codec'
        exclude group: 'org.apache.commons', module: 'commons-lang3'
        exclude group: 'com.google.code.gson', module: 'gson'
    }

    compile ('com.github.detro:phantomjsdriver:1.2.0') {
        exclude group: 'org.seleniumhq.selenium', module: 'selenium-java'
        exclude group: 'org.seleniumhq.selenium', module: 'selenium-remote-driver'
    }

    compile "net.sf.opencsv:opencsv:2.0"
    compile ("commons-beanutils:commons-beanutils-core:1.8.3") {
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    compile ("com.googlecode.lambdaj:lambdaj:2.3.3") {
        exclude group: 'org.hamcrest', module: 'hamcrest-all'
        exclude group: 'cglib', module: 'cglib-nodep'
        exclude group: 'org.objenesis', module: 'objenesis'
    }
    compile "com.google.guava:guava:18.0"
    compile "joda-time:joda-time:2.2"
    compile "com.thoughtworks.xstream:xstream:1.4.1"
    compile "org.apache.commons:commons-lang3:3.3.2"
    compile "commons-collections:commons-collections:3.2.1"
    compile "net.sf.flexjson:flexjson:2.1"
    compile "org.freemarker:freemarker:2.3.19"
    compile ("net.sourceforge.jexcelapi:jxl:2.6.12") {
        exclude group: 'log4j', module: 'log4j'
    }
    compile "asm:asm:3.3.1"

    compile "org.hamcrest:hamcrest-core:1.3"
    compile 'org.hamcrest:hamcrest-library:1.3'
    compile "com.thoughtworks.xstream:xstream:1.4.1"
    compile "commons-collections:commons-collections:3.2.1"
    compile "net.sf.flexjson:flexjson:2.1"
    compile ("net.sourceforge.htmlunit:htmlunit:2.15") {
        exclude group: 'org.apache.commons', module: 'commons-lang3'
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'xml-apis', module: 'xml-apis'
        exclude group: 'commons-codec', module: 'commons-codec'
    }
    compile "org.freemarker:freemarker:2.3.21"
    compile("org.fluentlenium:fluentlenium-core:0.10.2") {
        exclude group: 'org.seleniumhq.selenium', module:'selenium-java'
        exclude group: 'junit', module: 'junit-dep'
    }
    compile "com.jhlabs:filters:2.0.235"
    compile "org.asciidoctor:asciidoctor-java-integration:0.1.3"
    compile "com.google.code.gson:gson:2.2.4"
    compile "junit:junit:4.11"
    compile "javax.validation:validation-api:1.1.0.Final"
    compile "org.hibernate:hibernate-validator:5.1.1.Final"
    compile "javax.el:javax.el-api:2.2.4"
    compile "org.glassfish.web:javax.el:2.2.4"

    compile "org.objenesis:objenesis:2.1"
    compile "xml-apis:xml-apis:1.4.01"

    testCompile "org.springframework:spring-test:3.2.3.RELEASE"
    testCompile "org.springframework:spring-context:3.2.3.RELEASE"
    testCompile "org.springframework:spring-context-support:3.2.3.RELEASE"

    testCompile project(':serenity-sample-alternative-resources')
    testCompile project(':serenity-test-utils')
    testCompile "org.skyscreamer:jsonassert:1.2.0"
    testCompile("org.jbehave:jbehave:3.8") {
        exclude module: 'freemarker'
        exclude module: 'junit'
        exclude module: 'xstream'
    }
}

processResources {
    filter ReplaceTokens, tokens: [
            "application.version": "" + version
    ]
}

task writeNewPom << {
    pom {
        project {
            inceptionYear '2008'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("pom.xml")
}